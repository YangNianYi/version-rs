name: ci

on:
  pull_request:
  push:
    #branches:
    #  - main

env:
  IMAGE: clux/version

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Prepare image tags
        id: prep
        run: |
          TAG=$(grep -E "^version" Cargo.toml | awk -F"\"" '{print $2}' | head -n 1)
          IMAGE="${{ env.IMAGE }}"
          if curl -sSL https://registry.hub.docker.com/v1/repositories/${IMAGE}/tags | jq -r ".[].name" | grep -q ${TAG}; then
            echo "Semver tag ${TAG} already exists - not publishing"
            echo "tags=${IMAGE}:latest" >> $GITHUB_OUTPUT
          else
            echo "Semver tag ${TAG} not found - publishing"
            echo "tags=${IMAGE}:latest,${IMAGE}:${TAG}" >> $GITHUB_OUTPUT
          fi
          echo "tags=${TAG}" >> $GITHUB_OUTPUT

      - uses: docker/setup-buildx-action@v1
        id: buildx

      - name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"

      - uses: docker/metadata-action@v3
        id: docker_meta
        with:
          images: ${{ env.IMAGE }}
          labels: |
            org.opencontainers.image.version=${{ steps.prep.outputs.semver }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.title=${{ env.IMAGE }}

      - uses: docker/login-action@v1
        if: github.event_name != 'pull_request'
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-dockerx6-${{ steps.prep.outputs.semver }}
          restore-keys: |
            ${{ runner.os }}-dockerx6-

      # TODO: fix caching of mount=type=cache (this currently only does layer caching)
      # https://github.com/kube-rs/version-rs/pull/5#issuecomment-932984323
      # https://github.com/docker/build-push-action
      - uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          platforms: linux/amd64
          push: ${{ github.ref == 'refs/heads/master' }}
          tags: ${{ steps.prep.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          # type=gha seems to be the way forward, but it does not seem to cache mounted cache directories in the build stage only layers
          # source: https://github.com/moby/buildkit/blob/master/cache/remotecache/gha/gha.go
          cache-from: type=gha,scope=version5
          cache-to: type=gha,scope=version5,mode=max
          # type=local seems to work similarly, needing an extra avoid buildup stage, but also only caches layers and only supports mode=min
          # https://github.com/docker/build-push-action/issues/252
          #cache-from: type=local,src=/tmp/.buildx-cache
          #cache-to: type=local,dest=/tmp/.buildx-cache-new

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly
          components: rustfmt,clippy
      - run: cargo +nightly fmt -- --check

      - uses: giraffate/clippy-action@v1
        with:
          reporter: 'github-pr-review'
          github_token: ${{ secrets.GITHUB_TOKEN }}
