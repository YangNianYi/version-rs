name: ci

on:
  pull_request:
  push:
    branches:
      - master

env:
  REPOSITORY: ${{ github.actor }}/${{ github.workflow }}

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Prepare image tags
        id: prep
        run: |
          TAG=$(grep -E "^version" Cargo.toml | awk -F"\"" '{print $2}' | head -n 1)
          IMAGE="${{ env.REPOSITORY }}"
          if curl -sSL https://registry.hub.docker.com/v1/repositories/${IMAGE}/tags | jq -r ".[].name" | grep -q ${TAG}; then
            echo "Semver tag ${TAG} already exists - not publishing"
            echo ::set-output name=tags::${IMAGE}:latest
          else
            echo "Semver tag ${TAG} not found - publishing"
            echo ::set-output name=tags::${IMAGE}:latest,${IMAGE}:${TAG}
          fi
          echo ::set-output name=semver::${TAG}

      - uses: docker/setup-buildx-action@v1
        id: buildx

      - uses: docker/metadata-action@v3
        id: docker_meta
        with:
          images: ${{ env.REPOSITORY }}
          labels: |
            org.opencontainers.image.version=${{ steps.prep.outputs.semver }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.title=${{ github.actor }}/${{ github.workflow }}

      - uses: docker/login-action@v1
        if: github.event_name != 'pull_request'
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          push: ${{ github.ref == 'refs/heads/master' }}
          tags: ${{ steps.prep.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt,clippy
          override: true
      - name: Run rustfmt
        run: cargo +nightly fmt -- --check
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
